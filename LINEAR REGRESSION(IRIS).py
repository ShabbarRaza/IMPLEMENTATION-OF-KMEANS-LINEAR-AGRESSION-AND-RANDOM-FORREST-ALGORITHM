{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from sklearn import datasets, linear_model\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "df = pd.read_csv(r'C:\\Users\\SHABBAR RAZA\\Desktop\\iris.csv' )\n",
    "df.head()\n",
    "df.columns  = ['sepal length in cm', 'sepal width in cm', 'petal length in cm', 'pental widht in cm ', 'Class']\n",
    "Y = df['sepal length in cm']\n",
    "X = df['sepal widht in cm']\n",
    "\n",
    "X_train = X[:-250]\n",
    "X_test = X[-250:]\n",
    "\n",
    "Y_train = Y[:-250]\n",
    "Y_test = Y[-250:]\n",
    "\n",
    " \n",
    "\n",
    "# Plot outputs\n",
    "plt.scatter(X_test, Y_test, color='black')\n",
    "plt.title('Test Data')\n",
    "plt.xlabel('CATEGORY'1')\n",
    "plt.ylabel('CATEGORY'3')\n",
    "plt.xticks(())\n",
    "plt.yticks(())\n",
    "\n",
    "\n",
    "\n",
    "regr = linear_model.LinearRegression()\n",
    "\n",
    "\n",
    "regr.fit(X_train, Y_train)\n",
    "\n",
    "\n",
    "plt.plot(X_test, regr.predict(X_test), color='red',linewidth=3)\n",
    "plt.show()\n",
    "           \n",
    "##LINEAR REGRESSION NOW MANUALLY######\n",
    "           \n",
    "           \n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "df = pd.read_csv(r'C:\\Users\\SHABBAR RAZA\\Desktop\\iris.csv' )\n",
    "df.head()\n",
    "df.columns  = ['sepal length in cm', 'sepal width in cm', 'petal length in cm', 'pental widht in cm ', 'Class']\n",
    "Y = df['sepal length in cm']\n",
    "X = df['sepal widht in cm']\n",
    "\n",
    "input1 = X[:-250]\n",
    "input2 = X[-250:]\n",
    "\n",
    "\n",
    "\n",
    "def estimate_coef(x, y): \n",
    "   \n",
    "    n = data.size(x) \n",
    "  \n",
    "    \n",
    "    m_x, m_y = np.mean(x), np.mean(y)\n",
    "    \n",
    "     devi_1 = SS_xy / SS_xx \n",
    "    devi_0 = m_y - b_1*m_x \n",
    "  \n",
    "    return(devi_0, devi_1) \n",
    "def linear_regression_line(x, y, b): \n",
    "     \n",
    "    plt.scatter(x, y, color = \"m\", \n",
    "               marker = \"o\", s = 30) \n",
    "  \n",
    "    y_pred = b[0] + b[1]*x \n",
    "  \n",
    "    plt.plot(x, y_pred, color = \"r\") \n",
    "  \n",
    "    plt.xlabel('x') \n",
    "    plt.ylabel('y')\n",
    "    \n",
    "    plt.show()\n",
    "    \n",
    "     estimate = estimate_coef(x, y) \n",
    "    print( .format(b[0], b[1])) \n",
    "  \n",
    "    plot_regression_line(x, y, estimate) \n",
    "           \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
